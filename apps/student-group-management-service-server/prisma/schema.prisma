datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Group {
  createdAt        DateTime          @default(now())
  description      String?
  groupMemberships GroupMembership[]
  id               String            @id @default(cuid())
  name             String?
  updatedAt        DateTime          @updatedAt
}

model GroupMembership {
  createdAt DateTime @default(now())
  group     Group?   @relation(fields: [groupId], references: [id])
  groupId   String?
  id        String   @id @default(cuid())
  student   Student? @relation(fields: [studentId], references: [id])
  studentId String?
  updatedAt DateTime @updatedAt
}

model Course {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  mcqs        Mcq[]
  name        String?
  updatedAt   DateTime @updatedAt
}

model Student {
  createdAt        DateTime          @default(now())
  email            String?
  firstName        String?
  groupMemberships GroupMembership[]
  id               String            @id @default(cuid())
  lastName         String?
  studentAnswers   StudentAnswer[]
  updatedAt        DateTime          @updatedAt
}

model StudentAnswer {
  answerDate     DateTime?
  createdAt      DateTime  @default(now())
  id             String    @id @default(cuid())
  mcq            Mcq?      @relation(fields: [mcqId], references: [id])
  mcqId          String?
  selectedOption String?
  student        Student?  @relation(fields: [studentId], references: [id])
  studentId      String?
  updatedAt      DateTime  @updatedAt
}

model Mcq {
  answerOptions  AnswerOption[]
  course         Course?         @relation(fields: [courseId], references: [id])
  courseId       String?
  createdAt      DateTime        @default(now())
  id             String          @id @default(cuid())
  question       String?
  studentAnswers StudentAnswer[]
  updatedAt      DateTime        @updatedAt
}

model AnswerOption {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  isCorrect Boolean?
  mcq       Mcq?     @relation(fields: [mcqId], references: [id])
  mcqId     String?
  text      String?
  updatedAt DateTime @updatedAt
}
